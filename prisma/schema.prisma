generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  products    Product[]
  created_at  DateTime  @default(now())
}

model Product {
  id                 String     @id @default(uuid())
  name               String
  urlName            String
  description        String?
  images             String[]
  price              Float
  sizes              String[]
  categories         Category[]
  created_at         DateTime   @default(now())
  gender             String?    @default("Unissex")
  brand              String?
  colors             String[]
  stock              Int        @default(1)
  discountPercentage Int        @default(0)
  installments       Int?       @default(0) // Parcelas
  interest           Float?     @default(0) // Juros
  isHighlighted      Boolean    @default(false) // Produto em destaque

  Purchase Purchase[]

  @@map("Products")
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  cellphone  String   @unique
  favorites  String[]
  bag        String[]
  created_at DateTime @default(now())

  role        Role         @default(USER)
  UserAddress UserAddress?
  Purchase    Purchase[]
}

model UserAddress {
  id        String  @id @default(uuid())
  userId    String  @unique
  street    String
  number    String
  reference String?
  district  String
  city      String
  state     String
  cep       String
  cpfCnpj   String
  country   String  @default("Brasil")

  user User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: NoAction)
}

model Purchase {
  id String @id @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: NoAction)

  productId String
  product   Product @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: NoAction)

  amount        Int      @default(1)
  totalPrice    Float
  reviewNote    Int?
  reviewComment String?
  created_at    DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}
